
variable "autounattend" {
  type    = string
  default = "./Autounattend.xml"
}

variable "disk_size" {
  type    = string
  default = "150000"
}

variable "disk_type_id" {
  type    = string
  default = "1"
}

variable "headless" {
  type    = string
  default = "false"
}

variable "hyperv_switchname" {
  type    = string
  default = "${env("hyperv_switchname")}"
}

variable "iso_checksum" {
  type    = string
  default = "sha256:3E4FA6D8507B554856FC9CA6079CC402DF11A8B79344871669F0251535255325"
}

variable "iso_url" {
  type    = string
  default = "Windows_SERVER_2022_EVAL_x64FRE_en-us.iso"
}

variable "manually_download_iso_from" {
  type    = string
  default = "https://www.microsoft.com/en-us/evalcenter/evaluate-windows-server-2022"
}

variable "memory" {
  type    = string
  default = "2048"
}

variable "restart_timeout" {
  type    = string
  default = "5m"
}

variable "virtio_win_iso" {
  type    = string
  default = "~/virtio-win.iso"
}

variable "vmx_version" {
  type    = string
  default = "14"
}

variable "winrm_timeout" {
  type    = string
  default = "2h"
}

source "vmware-iso" "autogenerated_1" {
  boot_wait         = "2m"
  communicator      = "winrm"
  cpus              = 2
  disk_adapter_type = "lsisas1068"
  disk_size         = "${var.disk_size}"
  disk_type_id      = "${var.disk_type_id}"
  floppy_files      = ["${var.autounattend}", "./autounattend_provision/disable-screensaver.ps1", "./autounattend_provision/disable-winrm.ps1", "./autounattend_provision/enable-winrm.ps1", "./autounattend_provision/unattend.xml", "./autounattend_provision/sysprep.bat"]
  guest_os_type     = "windows9srv-64"
  headless          = "${var.headless}"
  iso_checksum      = "${var.iso_checksum}"
  iso_url           = "${var.iso_url}"
  memory            = "${var.memory}"
  shutdown_command  = "a:/sysprep.bat"
  version           = "${var.vmx_version}"
  vm_name           = "WindowsServer2022"
  vmx_data = {
    "RemoteDisplay.vnc.enabled" = "false"
    "RemoteDisplay.vnc.port"    = "5900"
  }
  vmx_remove_ethernet_interfaces = true
  vnc_port_max                   = 5980
  vnc_port_min                   = 5900
  winrm_password                 = "vagrant"
  winrm_timeout                  = "${var.winrm_timeout}"
  winrm_username                 = "vagrant"
}

source "virtualbox-iso" "autogenerated_2" {
  boot_wait            = "2m"
  communicator         = "winrm"
  cpus                 = 2
  disk_size            = "${var.disk_size}"
  floppy_files         = ["${var.autounattend}", "./autounattend_provision/disable-screensaver.ps1", "./autounattend_provision/disable-winrm.ps1", "./autounattend_provision/enable-winrm.ps1", "./autounattend_provision/unattend.xml", "./autounattend_provision/sysprep.bat"]
  guest_additions_mode = "disable"
  guest_os_type        = "Windows2019_64"
  headless             = "${var.headless}"
  iso_checksum         = "${var.iso_checksum}"
  iso_url              = "${var.iso_url}"
  memory               = "${var.memory}"
  shutdown_command     = "a:/sysprep.bat"
  vm_name              = "WindowsServer2022"
  winrm_password       = "vagrant"
  winrm_timeout        = "${var.winrm_timeout}"
  winrm_username       = "vagrant"
}

build {
  //sources = ["source.vmware-iso.autogenerated_1"]
  sources = ["source.virtualbox-iso.autogenerated_2"]

  provisioner "windows-shell" {
    execute_command = "{{ .Vars }} cmd /c \"{{ .Path }}\""
    scripts         = ["./provision_scripts/enable-rdp.bat"]
  }

  provisioner "powershell" {
    scripts = ["./provision_scripts/vm-guest-tools.ps1", "./provision_scripts/debloat-windows.ps1"]
  }

  provisioner "windows-restart" {
    restart_timeout = "${var.restart_timeout}"
  }

  provisioner "windows-shell" {
    execute_command = "{{ .Vars }} cmd /c \"{{ .Path }}\""
    scripts         = ["./provision_scripts/pin-powershell.bat", "./provision_scripts/set-winrm-automatic.bat", "./provision_scripts/uac-enable.bat", "./provision_scripts/compile-dotnet-assemblies.bat", "./provision_scripts/dis-updates.bat", "./provision_scripts/compact.bat"]
  }

  post-processor "vagrant" {
    keep_input_artifact  = false //artifact will be deleted
    output               = "windows_2022_{{.Provider}}.box"
    vagrantfile_template = "vagrantfile-windows_2016.template"
  }
}
